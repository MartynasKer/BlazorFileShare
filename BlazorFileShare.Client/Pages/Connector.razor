@namespace BlazorFileShare.Client.Pages
@page "/"


<div class="container-fluid position-relative overflow-auto" style="height: calc(100% - 150px); top: 75px; padding-top: 1rem; padding-bottom: 1rem;">
    <Messenger></Messenger>
    <div class="row justify-content-center align-items-center h-100">
        <div class="col text-center" style="max-width: 480px;">
            @if (ClientRoomService.Connected)
            {
                <h3 class="mb-2">room @ClientRoomService.RoomCode </h3>
                <h1 class="mb-4">I am <span class="text-muted">@ClientRoomService.MyMember.Name</span></h1>
            }
            @if (!ClientRoomService.Connected)
            {

                @if (State == UIState.Creating || State == UIState.Joining)
                {
                    <div class="form-group mb-4">
                        <label for="room-number">Room number (enter a 4 digit number)</label>
                        <input id="room-number" class="form-control" type="number" maxlength="4" placeholder="Enter room number" @bind-value:event="oninput" @bind-value="Code" />
                    </div>
                }
                @if (State == UIState.Creating || State == UIState.Idle)
                {
                    <div class="mb-3">
                        <button class="btn btn-success" @onclick="CreateRoomAsync" disabled="@CanConnect">Create Room</button>
                    </div>

                }
                @if (State == UIState.Joining || State == UIState.Idle)
                {
                    <div class="mb-3">
                        <button class="btn btn-primary" disabled="@CanConnect" @onclick="JoinRoomAsync">Join Room</button>
                    </div>
                }

                @if (State == UIState.Joining || State == UIState.Creating)
                {
                    <div class="mb-3">
                        <button class="btn btn-info" @onclick="()=>State = UIState.Idle">Back</button>
                    </div>
                }

            }
            else
            {

                @foreach (var client in ClientRoomService.Clients)
                {
                    <label for="@("file_input_"+ client.Name)" class="btn btn-primary btn-lg m-1">
                        @if (client.Type == BlazorFileShare.Domain.DeviceType.Mobile)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-phone" viewBox="0 0 16 16">
                                <path d="M11 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h6zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H5z" />
                                <path d="M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z" />
                            </svg>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-laptop" viewBox="0 0 16 16">
                                <path d="M13.5 3a.5.5 0 0 1 .5.5V11H2V3.5a.5.5 0 0 1 .5-.5h11zm-11-1A1.5 1.5 0 0 0 1 3.5V12h14V3.5A1.5 1.5 0 0 0 13.5 2h-11zM0 12.5h16a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5z" />
                            </svg>
                        }
                        Upload to @client.Name
                    </label>
                    <InputFile OnChange="async (e) => await OnFileChange(e, client.Name)" id="@("file_input_"+ client.Name)" class="d-none"></InputFile>
                }

                <div class="form-row mt-3">
                    <div class="col">
                        <input class="form-control" type="text" placeholder="Enter message" @bind-value="message">
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-secondary" disabled="@CanSend" @onclick="SendMessage">
                            Send
                        </button>
                    </div>
                </div>
                <div class="form-row mt-3">
                    <div class="col-auto">
                        <button class="btn btn-secondary" @onclick="LeaveRoomAsync">
                            Leave Room
                        </button>
                    </div>
                    @if (!CanSend)
                    {
                        <div class="col-auto">

                            <label for="file_input_all" class="btn btn-secondary">
                                Upload to all
                            </label>
                            <InputFile OnChange="(e) => OnFileChangeAll(e)" id="file_input_all" class="d-none"></InputFile>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
<div class="fixed-bottom">
    <div class="container">
        <InfoAlert></InfoAlert>
    </div>
    <nav class="navbar navbar-light bg-white border-top" style="height: 75px;">
        <div class="container justify-content-center">
            <small class="navbar-text">
                Signaling server connection status: @ClientRoomService.State
                @if (ClientRoomService.State == Microsoft.AspNetCore.SignalR.Client.HubConnectionState.Disconnected)
                {
                    <span> | </span>
                    <a class="navbar-link text-nowrap" href="#" @onclick:preventDefault @onclick="ReconnectAsync">
                        Reconnect
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z" />
                            <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z" />
                        </svg>
                    </a>
                }
            </small>
        </div>
    </nav>
</div>